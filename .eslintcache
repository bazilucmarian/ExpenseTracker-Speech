[{"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\index.js":"1","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\App.js":"2","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\theme.js":"3","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Details\\Details.jsx":"4","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Main\\Main.jsx":"5","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Main\\Form\\Form.jsx":"6","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Main\\List\\List.jsx":"7","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\context\\context.js":"8","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\context\\contextReducer.js":"9","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\constants\\categories.js":"10","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\utils\\formatDate.js":"11","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\useTransactions.js":"12","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Snackbar\\Snackbar.jsx":"13","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\InfoCard.jsx":"14"},{"size":426,"mtime":1608741092426,"results":"15","hashOfConfig":"16"},{"size":2173,"mtime":1608877945803,"results":"17","hashOfConfig":"16"},{"size":1264,"mtime":1608726511953,"results":"18","hashOfConfig":"16"},{"size":1049,"mtime":1608878933137,"results":"19","hashOfConfig":"16"},{"size":1846,"mtime":1608878962765,"results":"20","hashOfConfig":"16"},{"size":5312,"mtime":1608748540515,"results":"21","hashOfConfig":"16"},{"size":2120,"mtime":1608876993853,"results":"22","hashOfConfig":"16"},{"size":1312,"mtime":1608747819477,"results":"23","hashOfConfig":"16"},{"size":596,"mtime":1608747222150,"results":"24","hashOfConfig":"16"},{"size":1765,"mtime":1608732693810,"results":"25","hashOfConfig":"16"},{"size":353,"mtime":1608733335737,"results":"26","hashOfConfig":"16"},{"size":1149,"mtime":1608738260036,"results":"27","hashOfConfig":"16"},{"size":969,"mtime":1608748658412,"results":"28","hashOfConfig":"16"},{"size":373,"mtime":1608879486603,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ir26it",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\index.js",[],["61","62"],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\App.js",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\theme.js",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Details\\Details.jsx",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Main\\Main.jsx",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Main\\Form\\Form.jsx",["63"],"import React, {useState,useEffect, useContext} from 'react'\r\nimport {TextField, Typography, Grid , Button, FormControl, InputLabel, Select, MenuItem} from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport {ExpenseTrackerContext} from \"../../../context/context\"\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport {incomeCategories, expenseCategories} from \"../../../constants/categories\"\r\nimport formatDate from \"../../../utils/formatDate\"\r\nimport {useSpeechContext} from \"@speechly/react-client\"\r\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\"\r\n\r\n\r\nconst useStyles =makeStyles((themee)=>({\r\n\r\n    radioGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: '-10px',\r\n      },\r\n      button: {\r\n        marginTop: '20px',\r\n      },\r\n}))\r\n\r\nconst initialState={\r\n    amount:\"\",\r\n    category:\"\",\r\n    type:\"Income\", \r\n    date:formatDate(new Date())\r\n}\r\n\r\nconst Form = () => {\r\n    const [formData, setFormData]=useState(initialState)\r\n    const {addTransaction}=useContext(ExpenseTrackerContext)\r\n    const { segment }=useSpeechContext()\r\n    const classes=useStyles()\r\n\r\n    const [open, setOpen]=useState(false)\r\n    \r\n    const createTransaction=()=>{\r\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\")){\r\n            return\r\n\r\n        }\r\n        const transaction={...formData, amount:Number(formData.amount), id:uuidv4()}\r\n        setOpen(true)\r\n        addTransaction(transaction)\r\n        setFormData(initialState)\r\n    }\r\n\r\n    const selectedCategories= formData.type === \"Income\"? incomeCategories : expenseCategories\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(segment){\r\n            if(segment.intent.intent === 'add_expense'){\r\n                setFormData({...formData, type: 'Expense'})\r\n            }else if(segment.intent.intent === 'add_income'){\r\n                setFormData({...formData, type: 'Income'})\r\n            }else if(segment.isFinal && segment.intent.intent === \"create_transaction\"){\r\n                return createTransaction()\r\n            }else if(segment.isFinal && segment.intent.intent === \"cancel_transaction\"){\r\n                setFormData(initialState)\r\n            }\r\n\r\n            segment.entities.forEach((entity)=>{\r\n                const category=`${entity.value.charAt(0)}${entity.value.slice(1).toLowerCase()}`\r\n              switch(entity.type){\r\n                  case \"amount\":\r\n                      setFormData({...formData, amount:entity.value})\r\n                      break;\r\n                case \"category\":\r\n                    if(incomeCategories.map((cat)=>cat.type).includes(category)){\r\n                        setFormData({...formData, type:\"Income\", category})\r\n                    }else{\r\n                        if(expenseCategories.map((cat)=>cat.type).includes(category)){\r\n                            setFormData({...formData, type:\"Expense\", category})\r\n                        }\r\n                    }\r\n                    setFormData({...formData, category})\r\n                    break;\r\n                case \"date\":\r\n                    setFormData({...formData, date:entity.value})\r\n                    break;\r\n                      default:\r\n                          break;\r\n              }\r\n\r\n            })\r\n            if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date){\r\n                createTransaction()\r\n            }\r\n        }\r\n\r\n    },[segment])\r\n\r\n    return (\r\n       <Grid container spacing={2}>\r\n           <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n           <Grid item xs={12}>\r\n               <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                   {segment && segment.words.map((w)=>w.value).join(\" \")}\r\n                       \r\n                   \r\n               </Typography>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n\r\n            <FormControl fullWidth>\r\n           <InputLabel>Type</InputLabel>\r\n           <Select value={formData.type} onChange={(e)=>setFormData({...formData, type: e.target.value})}>\r\n               <MenuItem value=\"Income\">Income</MenuItem>\r\n               <MenuItem value=\"Expense\">Expense</MenuItem>\r\n           </Select>\r\n            </FormControl>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n\r\n            <FormControl fullWidth>\r\n           <InputLabel>Category</InputLabel>\r\n           <Select value={formData.category} onChange={(e)=>setFormData({...formData, category: e.target.value})}>\r\n               {selectedCategories.map((c)=><MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n\r\n           </Select>\r\n            </FormControl>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n            <TextField value={formData.amount} onChange={(e)=>setFormData({...formData, amount:e.target.value})} type=\"number\" label=\"Amount\" fullWidth></TextField>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n            <TextField value={formData.date} onChange={(e)=>setFormData({...formData, date:formatDate(e.target.value)})} type=\"date\" label=\"Date\" fullWidth></TextField>\r\n           </Grid>\r\n            <Button  onClick={createTransaction} className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth>Create</Button>\r\n       </Grid>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Main\\List\\List.jsx",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\context\\context.js",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\context\\contextReducer.js",["64"],"const transactions = [{ id: 1 }];\r\n\r\nconst contextReducer = (state, action) => {\r\n  let transactions;\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      transactions = state.filter((t) => t.id !== action.payload);\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n      return transactions;\r\n\r\n    case \"ADD_TRANSACTION\":\r\n      transactions = [action.payload, ...state];\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n      return transactions;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contextReducer;\r\n","D:\\React-voiceExpenseTracker\\expense-tracker\\src\\constants\\categories.js",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\utils\\formatDate.js",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\useTransactions.js",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\Snackbar\\Snackbar.jsx",[],"D:\\React-voiceExpenseTracker\\expense-tracker\\src\\components\\InfoCard.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":94,"column":7,"nodeType":"71","endLine":94,"endColumn":16,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":7,"nodeType":"75","messageId":"76","endLine":1,"endColumn":19},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["79"],"no-unused-vars","'transactions' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"82","text":"83"},[3458,3467],"[createTransaction, formData, segment]"]